package com.project.sitefilmes.service.impl;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.project.sitefilmes.exception.AuthenticateError;
import com.project.sitefilmes.exception.BusinessRuleException;
import com.project.sitefilmes.model.User;
import com.project.sitefilmes.model.repository.UserRepository;
import com.project.sitefilmes.service.UserService;

@Service
public class UserServiceImpl implements UserService {

	@Autowired
	private UserRepository repository;

	@Override
	public User authenticate(String email, String password) {

		Optional<User> user = repository.findByEmail(email);

		if (!user.isPresent()) {
			throw new AuthenticateError("Usuário não encontrado para o email informado.");
		}

		if (!password.equals(user.get().getPassword())) {
			throw new AuthenticateError("Senha inválida.");
		}

		return user.get();
	}

	@Override
	@Transactional
	public User save(User user) {

		validateEmail(user.getEmail());
		return repository.save(user);
	}

	@Override
	@Transactional
	public void delete(User user) {
		repository.delete(user);

	}

	@Override
	public void validateEmail(String email) {

		boolean exist = repository.existsByEmail(email);
		if (exist) {
			throw new BusinessRuleException("Já existe um usuário cadastrado com este email.");
		}

	}

	@Override
	public User getById(Long id) {

		return repository.findById(id);
	}

}
